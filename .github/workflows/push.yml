name: On Push

on: [ push ]

jobs:
    audit:
        name: Audit
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@master
            -   uses: actions/setup-node@master
                with:
                    node-version: 12
            -   run: npm audit
    test:
        name: Test
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@master
            -   uses: actions/setup-node@master
                with:
                    node-version: 12
            -   uses: actions/cache@v1
                id: cache-modules
                with:
                    path: node_modules
                    key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
            -   uses: actions/cache@v1
                if: steps.cache-modules.outputs.cache-hit != 'true'
                with:
                    path: ~/.npm
                    key: ${{ runner.os }}-node-global
            -   run: npm ci
                if: steps.cache-modules.outputs.cache-hit != 'true'
            -   run: npm run lint
            -   run: npm run test:ci
            -   run: npm run build

    publish-gpr:
        needs: test
        runs-on: ubuntu-latest
        if: "contains(github.ref, 'master') && !contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"
        steps:
            -   uses: actions/checkout@v2
            -   run: git fetch --prune --unshallow
            -   uses: actions/setup-node@v1
                with:
                    node-version: 12
            -   uses: actions/cache@v1
                id: cache-modules
                with:
                    path: node_modules
                    key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
            -   uses: actions/cache@v1
                if: steps.cache-modules.outputs.cache-hit != 'true'
                with:
                    path: ~/.npm
                    key: ${{ runner.os }}-node-global
            -   run: npm ci
                if: steps.cache-modules.outputs.cache-hit != 'true'
            -   run: npm run build
            -   run: npx auto shipit
                env:
                    GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
                    NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}


